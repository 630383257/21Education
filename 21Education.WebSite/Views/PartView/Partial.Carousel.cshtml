@using System.Text.RegularExpressions
@model CarouselViewModel


<style>
    .carousel.@Model.ClassName {
        --ImgWidth: @Model.ImgWidth;
        --ShowCount: @Model.ShowCount;
        @(Model.ImgHeight!=0? "--ImgHeight: "+ Model.ImgHeight : "")
    }
</style>
<div class="carousel @Model.ClassName" style="width:1000px;margin:auto;">
    <div class="container">
        <div class="slider-container">
            @Slider(Model, Model.ShowCount)
        </div>
        <div class="carousel-prev carousel-btn">
            <img src="~/image/index.V3/index_product_prev.png" />
        </div>
        <div class="carousel-next carousel-btn flipx">
            <img src="~/image/index.V3/index_product_prev.png" />
        </div>
    </div>
    @*@if (!string.IsNullOrEmpty(Model.PreviewHtml))
        {
            @Preview(Model, Model.PreviewHtml)
        }*@
    <script>
        var options = { imgWidth: @Model.ImgWidth , plugClassName: ".@Model.ClassName" };
        @(Model.ShowCount != 0?"options.showCount = " + Model.ShowCount+";":"")
        @(Model.ImgHeight != 0?"options.imgHeight = " + Model.ImgHeight+";":"")
        $(".carousel.@Model.ClassName").Carousel(options);
    </script>
</div>
@helper Slider(List<Carousel> list, int showCount = 1)
    {

        for (int i = 0; i < list.Count; i++)
        {
            if (i == 0)
            {
                for (int j = list.Count - showCount; j < list.Count; j++)
                {
                    @Construct(list[j].ImgPath, list[j].Describe)
                }
            }
            @*

                @Construct(list[list.Count - 1].ImgPath, list[list.Count - 1].Describe)
            *@
            @Construct(list[i].ImgPath, list[i].Describe)



            if (i == list.Count - 1)
            {
                for (int j = 0; j < showCount; j++)
                {
                    @Construct(list[j].ImgPath, list[j].Describe)
                }
            }
        }


}

@helper Construct(string src, string describe)
    {
        <div class="slider-item">
            <img src="@src" />
            <span class="slider__caption">@describe</span>
        </div>
}

@*@helper Preview(List<Carousel> list, string html)
        {

            <div class="preview @Model.ClassName">
                @for (int i = 0; i < list.Count; i++)
                {
                    @Html.Raw(string.Format(html, list[i].ImgPath))
                }
            </div>
    }*@


